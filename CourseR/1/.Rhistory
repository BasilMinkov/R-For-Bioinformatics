View(df)
View(df)
help("read.csv")
df <- read.csv("/Users/wassilyminkow/Scripts/R/CourseR/1/hw1.txt", sep="")
View(df)
df[,1]
df[,0]
summary(df[,1])
colnames(df)
for (i in 1:3)
{
print(names[i])
summary(df[,i])
}
names[1]
for (i in 1:3){
print(gen_names[i])
summary(df[,i])
}
gen_names <- colnames(df)
for (i in 1:3){
print(gen_names[i])
summary(df[,i])
}
for (i in 1:3){
print(gen_names[i])
print(summary(df[,i]))
}
help(plot())
help(plot
)
plot(df[,1], df[,2])
plot(df[,1], df[,3])
plot(df[,2], df[,3])
plot(df[,1], df[,2])
par(mfrow=c(1,3))
plot(df[,1], df[,2])
plot(df[,1], df[,3])
plot(df[,2], df[,3])
par(mfrow=c(1,3))
plot(df[,1], df[,2])
abline(lm(df[,2]~ d[,1]), col='red')
plot(df[,1], df[,3])
abline(lm(df[,3]~ d[,1]), col='red')
plot(df[,2], df[,3])
abline(lm(df[,3]~ d[,2]), col='red')
par(mfrow=c(1,3))
plot(df[,1], df[,2])
abline(lm(df[,2]~ df[,1]), col='red')
plot(df[,1], df[,3])
abline(lm(df[,3]~ df[,1]), col='red')
plot(df[,2], df[,3])
abline(lm(df[,3]~ df[,2]), col='red')
help(plot)
cor(d[,1], d[,2], m = 'sp')
cor(df[,1], df[,2], m = 'sp')
toString(cor(df[,1], df[,2], m = 'sp'))
"cor = " + toString(cor(df[,1], df[,2], m = 'sp'))
paste("cor = ", toString(cor(df[,1], df[,2], m = 'sp')))
paste("cor =", toString(cor(df[,1], df[,2], m = 'sp')))
paste(c("cor =", toString(cor(df[,1], df[,2], m = 'sp')), toString(cor.test(d[,1], d[,2], m = 'sp')$p.value))
)
paste(c("cor =", toString(cor(df[,1], df[,2], m = 'sp')), toString(cor.test(df[,1], df[,2], m = 'sp')$p.value))
)
paste(c("cor =", toString(cor(df[,1], df[,2], m = 'sp')), toString(cor.test(df[,1], df[,2], m = 'sp')$p.value)))
paste(c("cor =", toString(cor(df[,1], df[,2], m = 'sp')), toString(cor.test(df[,1], df[,2], m = 'sp')$p.value)), collapse=" ")
title <- paste(c("cor = ", toString(cor(df[,1], df[,2], m = 'sp')), "p-value = ", toString(cor.test(df[,1], df[,2], m = 'sp')$p.value)), collapse=" ")
plot(df[,1], df[,2], xlab=gen_names[1], ylab=gen_names[2], main=title)
cor(d[,1], d[,2], m = 'sp')
cor.test(d[,1], d[,2], m = 'sp')$p.value
abline(lm(df[,2]~ df[,1]), col='red')
title <- paste(c("cor = ", toString(cor(df[,1], df[,2], m = 'sp')), "p-value = ", cor.test(df[,1], df[,2], m = 'sp')$p.value), collapse=" ")
plot(df[,1], df[,2], xlab=gen_names[1], ylab=gen_names[2], main=title)
cor(d[,1], d[,2], m = 'sp')
cor.test(d[,1], d[,2], m = 'sp')$p.value
abline(lm(df[,2]~ df[,1]), col='red')
title <- paste(c("cor = ", toString(cor(df[,1], df[,2], m = 'sp')), "p-value = ", toString(cor.test(df[,1], df[,2], m = 'sp')$p.value)), collapse=" ")
plot(df[,1], df[,2], xlab=gen_names[1], ylab=gen_names[2], main=title)
cor(d[,1], d[,2], m = 'sp')
cor.test(d[,1], d[,2], m = 'sp')$p.value
abline(lm(df[,2]~ df[,1]), col='red')
cor(df[,1], df[,2], m = 'sp')
cor.test(df[,1], df[,2], m = 'sp')$p.value
title <- paste(c("cor = ", toString(cor(df[,1], df[,2], m = 'sp'))[1:4], "p-value = ", toString(cor.test(df[,1], df[,2], m = 'sp')$p.value)), collapse=" ")
plot(df[,1], df[,2], xlab=gen_names[1], ylab=gen_names[2], main=title)
cor(df[,1], df[,2], m = 'sp')
cor.test(df[,1], df[,2], m = 'sp')$p.value
abline(lm(df[,2]~ df[,1]), col='red')
"asdad"[1:2]
"asdad"[2]
help("toString")
title <- paste(c("cor = ", toString(cor(df[,1], df[,2], m = 'sp'), width = 3), "p-value = ", toString(cor.test(df[,1], df[,2], m = 'sp')$p.value)), collapse=" ")
plot(df[,1], df[,2], xlab=gen_names[1], ylab=gen_names[2], main=title)
cor(df[,1], df[,2], m = 'sp')
cor.test(df[,1], df[,2], m = 'sp')$p.value
abline(lm(df[,2]~ df[,1]), col='red')
title <- paste(c("cor = ", toString(cor(df[,1], df[,2], m = 'sp'), width = 4), "p-value = ", toString(cor.test(df[,1], df[,2], m = 'sp')$p.value)), collapse=" ")
plot(df[,1], df[,2], xlab=gen_names[1], ylab=gen_names[2], main=title)
cor(df[,1], df[,2], m = 'sp')
cor.test(df[,1], df[,2], m = 'sp')$p.value
abline(lm(df[,2]~ df[,1]), col='red')
par(mfrow=c(1,3))
title <- paste(c("cor = ", toString(cor(df[,1], df[,2], m = 'sp'), width = 4), "p-value = ", toString(cor.test(df[,1], df[,2], m = 'sp')$p.value)), collapse=" ")
plot(df[,1], df[,2], xlab=gen_names[1], ylab=gen_names[2], main=title)
cor(df[,1], df[,2], m = 'sp')
cor.test(df[,1], df[,2], m = 'sp')$p.value
abline(lm(df[,2]~ df[,1]), col='red')
title <- paste(c("cor = ", toString(cor(df[,1], df[,2], m = 'sp'), width = 6), "p-value = ", toString(cor.test(df[,1], df[,2], m = 'sp')$p.value)), collapse=" ")
plot(df[,1], df[,2], xlab=gen_names[1], ylab=gen_names[2], main=title)
cor(df[,1], df[,2], m = 'sp')
cor.test(df[,1], df[,2], m = 'sp')$p.value
abline(lm(df[,2]~ df[,1]), col='red')
help(cor)
par(mfrow=c(1,3))
title <- paste(c("Correlation p-value = ", toString(cor.test(df[,1], df[,2], m = 'sp')$p.value)), collapse=" ")
plot(df[,1], df[,2], xlab=gen_names[1], ylab=gen_names[2], sub=title)
cor(df[,1], df[,2], m = 'sp')
cor.test(df[,1], df[,2], m = 'sp')$p.value
abline(lm(df[,2]~ df[,1]), col='red')
title <- paste(c("Correlation p-value = ", toString(cor.test(df[,1], df[,3], m = 'sp')$p.value)), collapse=" ")
cor(df[,1], df[,3], m = 'sp')
cor.test(df[,1], df[,3], m = 'sp')$p.value
plot(df[,1], df[,3], xlab=gen_names[1], ylab=gen_names[3])
abline(lm(df[,3]~ df[,1]), col='red')
title <- paste(c("Correlation p-value = ", toString(cor.test(df[,2], df[,3], m = 'sp')$p.value)), collapse=" ")
plot(df[,2], df[,3], xlab=gen_names[2], ylab=gen_names[3], sub=title)
abline(lm(df[,3]~ df[,2]), col='red')
cor(df[,1], df[,2], m = 'sp')
cor.test(df[,1], df[,2], m = 'sp')$p.value
cor(df[,1], df[,3], m = 'sp')
cor.test(df[,1], df[,3], m = 'sp')$p.value
cor(df[,2], df[,3], m = 'sp')
cor.test(df[,2], df[,3], m = 'sp')$p.value
paste(c("cor = ", cor(df[,1], df[,2], m = 'sp'), cor.test(df[,1], df[,2], m = 'sp')$p.value))
print(gen_names[1], "VS", gen_names[2])
print("Spearman's Correlation")
cor(df[,1], df[,2], m = 'sp')
print("Correlation P-value")
cor.test(df[,1], df[,2], m = 'sp')$p.value
print(paste(c(gen_names[1], "VS", gen_names[2])))
print(paste(c(gen_names[1], "VS", gen_names[2]), collapse=" "))
print("Spearman's Correlation")
cor(df[,1], df[,2], m = 'sp')
print("Correlation P-value")
cor.test(df[,1], df[,2], m = 'sp')$p.value
print(paste(c(gen_names[1], "VS", gen_names[2]), collapse=" "))
print(paste(c(gen_names[1], "VS", gen_names[2]), collapse=" "))
print("Spearman's Correlation")
cor(df[,1], df[,2], m = 'sp')
print("Correlation P-value")
cor.test(df[,1], df[,2], m = 'sp')$p.value
paste(c(gen_names[1], "VS", gen_names[2]), collapse=" ")
paste(c(gen_names[1], "VS", gen_names[2]), collapse=" ")
print("Spearman's Correlation")
cor(df[,1], df[,2], m = 'sp')
print("Correlation P-value")
cor.test(df[,1], df[,2], m = 'sp')
paste(c(gen_names[1], "VS", gen_names[2]), collapse=" ")
cor.test(df[,1], df[,2], m = 'sp')
paste(c(gen_names[1], "VS", gen_names[3]), collapse=" ")
cor.test(df[,1], df[,2], m = 'sp')
paste(c(gen_names[2], "VS", gen_names[3]), collapse=" ")
cor.test(df[,2], df[,3], m = 'sp')
paste(c(gen_names[1], "VS", gen_names[2]), collapse=" ")
cor.test(df[,1], df[,2], m = 'sp')
paste(c(gen_names[1], "VS", gen_names[3]), collapse=" ")
cor.test(df[,1], df[,3], m = 'sp')
paste(c(gen_names[2], "VS", gen_names[3]), collapse=" ")
cor.test(df[,2], df[,3], m = 'sp')
boxplot(df)
for (i in 1:3){
print(gen_names[i])
print(summary(df[,i]))
}
boxplot(df, main="Gene Expression Boxplot")
paste(c(gen_names[1], "VS", gen_names[2]), collapse=" ")
cor.test(df[,1], df[,2], m = 'sp')
paste(c(gen_names[1], "VS", gen_names[3]), collapse=" ")
cor.test(df[,1], df[,3], m = 'sp')
paste(c(gen_names[2], "VS", gen_names[3]), collapse=" ")
cor.test(df[,2], df[,3], m = 'sp')
t.test(df[,1], df[,2])
t.test(df[,1], df[,2])
t.test(df[,1], df[,3])
t.test(df[,2], df[,3])
par(mfrow=c(1,4))
boxplot(df, main="Gene Expression Boxplot")
title <- paste(c("Correlation p-value = ", toString(cor.test(df[,1], df[,2], m = 'sp')$p.value)), collapse=" ")
plot(df[,1], df[,2], xlab=gen_names[1], ylab=gen_names[2], sub=title, main=)
abline(lm(df[,2]~ df[,1]), col='red')
title <- paste(c("Correlation p-value = ", toString(cor.test(df[,1], df[,3], m = 'sp')$p.value)), collapse=" ")
plot(df[,1], df[,3], xlab=gen_names[1], ylab=gen_names[3], sub=title)
abline(lm(df[,3]~ df[,1]), col='red')
title <- paste(c("Correlation p-value = ", toString(cor.test(df[,2], df[,3], m = 'sp')$p.value)), collapse=" ")
plot(df[,2], df[,3], xlab=gen_names[2], ylab=gen_names[3], sub=title)
abline(lm(df[,3]~ df[,2]), col='red')
par(mfrow=c(2,2))
boxplot(df, main="Gene Expression Boxplot")
title <- paste(c("Correlation p-value = ", toString(cor.test(df[,1], df[,2], m = 'sp')$p.value)), collapse=" ")
plot(df[,1], df[,2], xlab=gen_names[1], ylab=gen_names[2], sub=title, main=)
abline(lm(df[,2]~ df[,1]), col='red')
title <- paste(c("Correlation p-value = ", toString(cor.test(df[,1], df[,3], m = 'sp')$p.value)), collapse=" ")
plot(df[,1], df[,3], xlab=gen_names[1], ylab=gen_names[3], sub=title)
abline(lm(df[,3]~ df[,1]), col='red')
title <- paste(c("Correlation p-value = ", toString(cor.test(df[,2], df[,3], m = 'sp')$p.value)), collapse=" ")
plot(df[,2], df[,3], xlab=gen_names[2], ylab=gen_names[3], sub=title)
abline(lm(df[,3]~ df[,2]), col='red')
par(mfrow=c(2,2))
boxplot(df, main="Gene Expression Boxplot")
title <- paste(c("Correlation p-value = ", toString(cor.test(df[,1], df[,2], m = 'sp')$p.value)), collapse=" ")
plot(df[,1], df[,2], xlab=gen_names[1], ylab=gen_names[2], sub=title, main=paste(c(gen_names[1], "VS", gen_names[2]), collapse=" "))
abline(lm(df[,2]~ df[,1]), col='red')
title <- paste(c("Correlation p-value = ", toString(cor.test(df[,1], df[,3], m = 'sp')$p.value)), collapse=" ")
plot(df[,1], df[,3], xlab=gen_names[1], ylab=gen_names[3], sub=title, main=paste(c(gen_names[1], "VS", gen_names[3]), collapse=" "))
abline(lm(df[,3]~ df[,1]), col='red')
title <- paste(c("Correlation p-value = ", toString(cor.test(df[,2], df[,3], m = 'sp')$p.value)), collapse=" ")
plot(df[,2], df[,3], xlab=gen_names[2], ylab=gen_names[3], sub=title, main=paste(c(gen_names[1], "VS", gen_names[3]), collapse=" "))
abline(lm(df[,3]~ df[,2]), col='red')
# 1. List of gene pairs with significant linear dependence:
paste(c(gen_names[1], "VS", gen_names[2]), collapse=" ")
cor.test(df[,1], df[,2], m = 'sp')
paste(c(gen_names[1], "VS", gen_names[3]), collapse=" ")
cor.test(df[,1], df[,3], m = 'sp')
paste(c(gen_names[2], "VS", gen_names[3]), collapse=" ")
cor.test(df[,2], df[,3], m = 'sp')
par(mfrow=c(1,3))
boxplot(df, main="Gene Expression Boxplot")
title <- paste(c("Correlation p-value = ", toString(cor.test(df[,1], df[,2], m = 'sp')$p.value)), collapse=" ")
plot(df[,1], df[,2], xlab=gen_names[1], ylab=gen_names[2], sub=title, main=paste(c(gen_names[1], "VS", gen_names[2]), collapse=" "))
abline(lm(df[,2]~ df[,1]), col='red')
title <- paste(c("Correlation p-value = ", toString(cor.test(df[,1], df[,3], m = 'sp')$p.value)), collapse=" ")
plot(df[,1], df[,3], xlab=gen_names[1], ylab=gen_names[3], sub=title, main=paste(c(gen_names[1], "VS", gen_names[3]), collapse=" "))
abline(lm(df[,3]~ df[,1]), col='red')
title <- paste(c("Correlation p-value = ", toString(cor.test(df[,2], df[,3], m = 'sp')$p.value)), collapse=" ")
plot(df[,2], df[,3], xlab=gen_names[2], ylab=gen_names[3], sub=title, main=paste(c(gen_names[1], "VS", gen_names[3]), collapse=" "))
abline(lm(df[,3]~ df[,2]), col='red')
par(mfrow=c(1,3))
title <- paste(c("Correlation p-value = ", toString(cor.test(df[,1], df[,2], m = 'sp')$p.value)), collapse=" ")
plot(df[,1], df[,2], xlab=gen_names[1], ylab=gen_names[2], sub=title, main=paste(c(gen_names[1], "VS", gen_names[2]), collapse=" "))
abline(lm(df[,2]~ df[,1]), col='red')
title <- paste(c("Correlation p-value = ", toString(cor.test(df[,1], df[,3], m = 'sp')$p.value)), collapse=" ")
plot(df[,1], df[,3], xlab=gen_names[1], ylab=gen_names[3], sub=title, main=paste(c(gen_names[1], "VS", gen_names[3]), collapse=" "))
abline(lm(df[,3]~ df[,1]), col='red')
title <- paste(c("Correlation p-value = ", toString(cor.test(df[,2], df[,3], m = 'sp')$p.value)), collapse=" ")
plot(df[,2], df[,3], xlab=gen_names[2], ylab=gen_names[3], sub=title, main=paste(c(gen_names[1], "VS", gen_names[3]), collapse=" "))
abline(lm(df[,3]~ df[,2]), col='red')
paste(c(gen_names[1], "VS", gen_names[2]), collapse=" ")
cor.test(df[,1], df[,2], m = 'sp')
paste(c(gen_names[1], "VS", gen_names[3]), collapse=" ")
cor.test(df[,1], df[,3], m = 'sp')
paste(c(gen_names[2], "VS", gen_names[3]), collapse=" ")
cor.test(df[,2], df[,3], m = 'sp')
par(mfrow=c(1,3))
title <- paste(c("Correlation p-value = ", toString(cor.test(df[,1], df[,2], m = 'sp')$p.value)), collapse=" ")
plot(df[,1], df[,2], xlab=gen_names[1], ylab=gen_names[2], sub=title, main=paste(c(gen_names[1], "VS", gen_names[2]), collapse=" "))
abline(lm(df[,2]~ df[,1]), col='red')
title <- paste(c("Correlation p-value = ", toString(cor.test(df[,1], df[,3], m = 'sp')$p.value)), collapse=" ")
plot(df[,1], df[,3], xlab=gen_names[1], ylab=gen_names[3], sub=title, main=paste(c(gen_names[1], "VS", gen_names[3]), collapse=" "))
abline(lm(df[,3]~ df[,1]), col='red')
title <- paste(c("Correlation p-value = ", toString(cor.test(df[,2], df[,3], m = 'sp')$p.value)), collapse=" ")
plot(df[,2], df[,3], xlab=gen_names[2], ylab=gen_names[3], sub=title, main=paste(c(gen_names[1], "VS", gen_names[3]), collapse=" "))
abline(lm(df[,3]~ df[,2]), col='red')
for (i in 1:3){
print(gen_names[i])
print(summary(df[,i]))
}
t.test(df[,1], df[,2])
t.test(df[,1], df[,3])
t.test(df[,2], df[,3])
boxplot(df, main="Gene Expression Boxplot")
for (i in 1:3){
print(gen_names[i])
print(summary(df[,i]))
}
t.test(df[,1], df[,2])
t.test(df[,1], df[,3])
t.test(df[,2], df[,3])
par(mfrow=c(1,1))
boxplot(df, main="Gene Expression Boxplot")
cor.test(df[,1], df[,2], m = 'sp')
cor.test(df[,1], df[,2], m = 'sp')
paste(c(gen_names[1], "VS", gen_names[2]), collapse=" ")
paste(c(gen_names[2], "VS", gen_names[3]), collapse=" ")
for (i in 1:3){
print(gen_names[i])
print(summary(df[,i]))
}
t.test(df[,1], df[,2])
t.test(df[,1], df[,3])
t.test(df[,2], df[,3])
for (i in 1:3){
print(gen_names[i])
print(summary(df[,i]))
}
par(mfrow=c(1,1))
plot(den1,type="l",col="red", xlim=c(-1, 10))
lines(den2,col="green")
lines(den2,col="blue")
den1=density(df[,1])
den2=density(df[,2])
den3=density(df[,3])
par(mfrow=c(1,1))
plot(den1,type="l",col="red", xlim=c(-1, 10))
lines(den2,col="green")
lines(den2,col="blue")
den1=density(df[,1])
den2=density(df[,2])
den3=density(df[,3])
par(mfrow=c(1,1))
plot(den1,type="l",col="red")
lines(den2,col="green")
lines(den2,col="blue")
den1=density(df[,1])
den2=density(df[,2])
den3=density(df[,3])
par(mfrow=c(1,1))
plot(den1,type="l",col="red")
lines(den2,col="green")
lines(den3,col="blue")
wilcox.test(df[,1], df[,2])
wilcox.test(df[,1], df[,3])
wilcox.test(df[,2], df[,3])
p.adjust(c(t.test(df[,1], df[,2]), t.test(df[,1], df[,3]), t.test(df[,2], df[,3])))
p.adjust(c(t.test(df[,1], df[,2])$p-value, t.test(df[,1], df[,3])$p-value, t.test(df[,2], df[,3])$p-value))
p.adjust(c(t.test(df[,1], df[,2])$p.value, t.test(df[,1], df[,3])$p.value, t.test(df[,2], df[,3])$p.value))
p.adjust(c(wilcox.test(df[,1], df[,2])$p.value, wilcox.test(df[,1], df[,3])$p.value), wilcox.test(df[,2], df[,3])$p.value)))
p.adjust(c(wilcox.test(df[,1], df[,2])$p.value, wilcox.test(df[,1], df[,3])$p.value, wilcox.test(df[,2], df[,3])$p.value))
wilcox.test(df[,1], df[,2])
wilcox.test(df[,1], df[,3])
wilcox.test(df[,2], df[,3])
p.adjust(c(wilcox.test(df[,1], df[,2])$p.value, wilcox.test(df[,1], df[,3])$p.value, wilcox.test(df[,2], df[,3])$p.value))
df <- read.csv("/Users/wassilyminkow/Scripts/R/CourseR/1/hw1.txt", sep="")
gen_names <- colnames(df)
paste(c(gen_names[1], "VS", gen_names[2]), collapse=" ")
cor.test(df[,1], df[,2], m = 'sp')
paste(c(gen_names[1], "VS", gen_names[3]), collapse=" ")
cor.test(df[,1], df[,3], m = 'sp')
paste(c(gen_names[2], "VS", gen_names[3]), collapse=" ")
cor.test(df[,2], df[,3], m = 'sp')
df <- read.csv("/Users/wassilyminkow/Scripts/R/CourseR/1/hw1.txt", sep="")
gen_names <- colnames(df)
paste(c(gen_names[1], "VS", gen_names[2]), collapse=" ")
cor.test(df[,1], df[,2], m = 'sp')
paste(c(gen_names[1], "VS", gen_names[3]), collapse=" ")
cor.test(df[,1], df[,3], m = 'sp')
paste(c(gen_names[2], "VS", gen_names[3]), collapse=" ")
cor.test(df[,2], df[,3], m = 'sp')
par(mfrow=c(1,3))
title <- paste(c("Correlation p-value = ", toString(cor.test(df[,1], df[,2], m = 'sp')$p.value)), collapse=" ")
plot(df[,1], df[,2], xlab=gen_names[1], ylab=gen_names[2], sub=title, main=paste(c(gen_names[1], "VS", gen_names[2]), collapse=" "))
abline(lm(df[,2]~ df[,1]), col='red')
title <- paste(c("Correlation p-value = ", toString(cor.test(df[,1], df[,3], m = 'sp')$p.value)), collapse=" ")
plot(df[,1], df[,3], xlab=gen_names[1], ylab=gen_names[3], sub=title, main=paste(c(gen_names[1], "VS", gen_names[3]), collapse=" "))
abline(lm(df[,3]~ df[,1]), col='red')
title <- paste(c("Correlation p-value = ", toString(cor.test(df[,2], df[,3], m = 'sp')$p.value)), collapse=" ")
plot(df[,2], df[,3], xlab=gen_names[2], ylab=gen_names[3], sub=title, main=paste(c(gen_names[1], "VS", gen_names[3]), collapse=" "))
abline(lm(df[,3]~ df[,2]), col='red')
for (i in 1:3){
print(gen_names[i])
print(summary(df[,i]))
}
par(mfrow=c(1,1))
boxplot(df, main="Gene Expression Boxplot")
t.test(df[,1], df[,2])
t.test(df[,1], df[,3])
t.test(df[,2], df[,3])
p.adjust(c(t.test(df[,1], df[,2])$p.value, t.test(df[,1], df[,3])$p.value, t.test(df[,2], df[,3])$p.value))
den1=density(df[,1])
den2=density(df[,2])
den3=density(df[,3])
par(mfrow=c(1,1))
plot(den1,type="l",col="red")
lines(den2,col="green")
lines(den3,col="blue")
wilcox.test(df[,1], df[,2])
wilcox.test(df[,1], df[,3])
wilcox.test(df[,2], df[,3])
p.adjust(c(wilcox.test(df[,1], df[,2])$p.value, wilcox.test(df[,1], df[,3])$p.value, wilcox.test(df[,2], df[,3])$p.value))
for (i in 1:3){
print(gen_names[i])
print(summary(df[,i]))
}
new.var = 1
a = c(T, T)
length(a)
typeof(a)
vec = c(1, "1", TRUE)
typeof(vec)
vec
T + F
T + 1.1
1 + "a"
as.charecter(1) + "a"
as.character(1) + "a"
"a" + "a"
f = fector(c("f", "m", "f"))
f = factor(c("f", "m", "f"))
f
typeof(f) # int
table(f)
f = factor(c("f", "m", "f"), levels = c("f", "m", "l"))
table(f)
table(c("f", "f", "f"))
x = 1:10
attr(x, 'my.attr') = "new attr"
x
attr(x, "name") = paste0('name', 1:10)
x
names(x)[1] = 'new.name'
x
x = c(a=1, b=4, c=-1, d=-5, d=10)
x
names(x)
x[c(1,5,1)]
x[c("d")]
x
table(table(names(x)))
table(names(x))
x
table(names(x))
table(table(names(x)))
x[x<0]
x<0
x[c(T,F)]
x
which(x<0)
plot(x,y,t='l')
plot(x,y,t='1')
plot(x,y,t='1')
help("plot")
plot(x,y,t='l')
o = order(x, decreasing = T)
o[1:10]
x = runif(100, 0, 5)
sort(x)
y=sin(x)
plot(x,y,t='1')
plot(x,y,t='l')
o = order(x, decreasing = T)
o[1:10]
plot(x[0],y[o],t='l')
plot(x[o],y[o],t='l')
T || F
T | F
T | F
T & F
i = i + 1
i=0
while(i<4){
print(i)
i = i + 1
}
while(i<4){
print(i)
i = i + 1
}
for (i in 1:10){
cat(i)
}
for (i in 1:10){
cat(i, " hey ")
}
a = 1
a
a[2] = 10
a
a[10] = 2
a
sum(1:10 != 1:10)
a = character(10)
system.time({for (i in 1:300000){a[i] = i}})
a = numeric(0)
system.time({for (i in 1:6000000){a[i] = i}})
a = numeric(6000000)
system.time({for (i in 1:6000000){a[i] = i}})
pi
x = runif(100)
x
x = runing(1, 0, 3)
x = runinf(1, 0, 3)
x = runif(1, 0, 3)
x
x
x = runif(1, 0, 3)
sin.x = sin(x)
x = runif(1, 0, 3)
sin.x = sin(x)
y = NaN
i = 1
while (y != sin.x ){
print(i)
y = -y*((x**2)/((2*i-2)(2*i-1)))
i = i + 1
}
while(y != sin.x){
print(i)
y = -y*((x**2)/((2*i-2)(2*i-1)))
i = i + 1
}
y
y = 0
i = 1
while(sin.x){
print(i)
y = -y*((x**2)/((2*i-2)(2*i-1)))
i = i + 1
}
while(sin.x){
print(i)
y = -y*((x**2)/((2*i-2)*(2*i-1)))
i = i + 1
}
